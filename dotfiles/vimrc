call plug#begin('~/.vim/plugged')
" view
Plug 'tomasr/molokai'
" navigator
Plug 'kshenoy/vim-signature'        "to place, toggle and display marks
Plug 'majutsushi/tagbar'            "browse the tags of the current file and get an overview of its structure
Plug 'scrooloose/nerdtree'          "file system explorer
" tags
Plug 'ludovicchabant/vim-gutentags' "management of tags files
Plug 'steffanc/cscopemaps.vim'      "cscope/vim key mappings
" format
Plug 'junegunn/vim-easy-align'      "A simple, easy-to-use Vim alignment plugin.
Plug 'drmikehenry/vim-headerguard'
Plug 'Chiel92/vim-autoformat'       "Format code with one button press
Plug 'godlygeek/tabular'            "for vim-markdown
Plug 'plasticboy/vim-markdown'      "The tabular plugin must come before vim-markdown.
" SCM related
Plug 'airblade/vim-gitgutter'       "shows a git diff in the 'gutter' (sign column), turn off by :GitGutterDisable
Plug 'tpope/vim-fugitive'           "A Git wrapper so awesome
" deprecated
"Plug 'derekwyatt/vim-scala'
"Plug 'aceofall/gtags.vim'
"Plug 'vim-scripts/taglist.vim'
call plug#end()


syntax on
let &t_Co=256
colorscheme molokai

set cursorline
highlight CursorLine cterm=none ctermbg=236 ctermfg=none
set hlsearch
set ruler


set shiftwidth=4
set tabstop=4
set expandtab

set smartindent
set number
set autoindent
set clipboard^=unnamed,unnamedplus

let mapleader=','
set diffopt+=iwhite
map <Leader>w :w!<CR>
map <Leader>q :qa!<CR>
map <Leader>vi :tabnew ~/.vimrc<CR>
map <Leader>s :source ~/.vimrc<CR>
map <Leader>df :tabnew a.cxx<CR>:diffthis<CR>:vsp b.cxx<CR>:diffthis<CR>
map <Leader>c :NERDTreeFind<CR>
map <Leader>n :let i=1 \| g//s//\=''.i/ \| let i=i+1<CR>
map <Leader>r ciw<c-r>0<Esc>
map <Leader>m do]c
map <Leader>sp :setlocal spell! spelllang=en_us<CR>
map <Leader>x :windo execute "%!xxd"<CR>
" copy current path
map <Leader>f :let @" = expand("%")<CR>
vnoremap p "0p

if &diff
    map gs :call IwhiteToggle()<CR>
    function! IwhiteToggle()
        if &diffopt =~ 'iwhite'
            set diffopt-=iwhite
        else
            set diffopt+=iwhite
        endif
    endfunction
endif

set spell spelllang=en_us
map <silent>  <F2> :setlocal spell! spelllang=en_us<CR>
map <silent>  <F3> :Autoformat<CR>
map <silent>  <F4> :q!<CR>
"map <silent>  <F5> :TlistToggle<CR>
map <silent>  <F5> :TagbarToggle<CR>
map <silent>  <F6> :NERDTreeToggle<CR>
map <silent>  <F7> :set wrap!<CR>
map <silent>  <F8> :set number!<CR>
map <silent>  <F9> :vertical resize -5<CR>
map <silent> <F10> :vertical resize +5<CR>

let g:tagbar_left=1
map H <c-w>h
map L <c-w>l

map <c-h> :tabp<CR>
map <c-l> :tabn<CR>
map <c-j> 6<c-e>
map <c-k> 6<c-y>

let Tlist_Show_One_File = 1


"""""""""""""""" Plug 'scrooloose/nerdtree' """"""""""""""""
let g:NERDTreeWinPos = "right"
let NERDTreeShowBookmarks=1
if isdirectory(".git")
    let g:NERDTreeBookmarksFile = '.git/.NERDTreeBookmarks'
elseif filereadable(".git") " for git worktree
    let g:NERDTreeBookmarksFile = '.NERDTreeBookmarks'
endif


"""""""""""""""" Plug 'Chiel92/vim-autoformat' """"""""""""""""
"let g:autoformat_verbosemode=1
let g:formatters_python = ['yapf', 'autopep8', 'fail']
let g:formatters_cpp = ['clangformat', 'fail']
let g:formatters_cuda = ['clangformat', 'fail']
"To disable the fallback to vim's indent file, retabbing and removing trailing whitespace
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0


"""""""""""""""" tags """"""""""""""""
set cscopetag                  " 使用 cscope 作为 tags 命令
set cscopeprg='gtags-cscope'   " 使用 gtags-cscope 代替 cscope

" gtags
"let GtagsCscope_Auto_Load = 1
"let CtagsCscope_Auto_Map = 1
"let GtagsCscope_Quiet = 1

"""""""""""""""" Plug 'plasticboy/vim-markdown' """"""""""""""""
filetype plugin on
let g:vim_markdown_folding_disabled = 1
" :HeaderDecrease:
" :HeaderIncrease: Analogous to :HeaderDecrease, but increase levels instead.
" :SetexToAtx:
" :TableFormat: Format the table under the cursor like this.
" :Toc: create a quickfix vertical window navigable table of contents with the headers.
" :Toch: Same as :Toc but in an horizontal window.
" :Toct: Same as :Toc but in a new tab.
" :Tocv: Same as :Toc for symmetry with :Toch and :Tocv.


"""""""""""""""" Plug 'junegunn/vim-easy-align' """"""""""""""""
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)
"

"""""""""""""""" Plug 'airblade/vim-gitgutter' """"""""""""""""
set updatetime=100


"""""""""""""""" Plug 'ludovicchabant/vim-gutentags' """""""""""""""" 
" support both gtags and ctags
if executable('gtags-cscope') && executable('gtags')
    let g:gutentags_modules = ['gtags_cscope']
elseif executable('ctags')
    let g:gutentags_modules = ['ctags']
endif
let g:gutentags_cache_dir = expand('~/.cache/tags') 
"let g:gutentags_trace = 1


"""""""""""""""" spell check """""""""""""""" 
" command and Vim will add it to its dictionary
" zg
" mark words as incorrect
" zw
" suggest a list of alternatives
" z=
