#!/usr/bin/env python3
import subprocess
import argparse
import os


def find_mp4_files(ext):

    mp4_files = []
    for root, _, files in os.walk('.'):
        for file in files:
            file_path = os.path.join(root, file)
            if not any(file.lower().endswith(e) for e in ext):
                continue
            if 'crf' in file_path:  # Don't re-encode mp4 which is already encode
                continue
            if 'nre' in file_path:  # nre stand for No Re-Encode
                continue
            mp4_files.append(file_path)

    return sorted(mp4_files)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--crf', type=int, default=20, help='CRF')
    parser.add_argument('-v', '--verbose', action="store_true", help='verbose')
    parser.add_argument('-r', '--remove', action="store_true", help='remove input video')
    parser.add_argument('-t', '--threshold', default=95, help='minimal percentage to remove input video')
    parser.add_argument('-e', '--ext', nargs='+', help='input file format')
    args = parser.parse_args()

    found_files = find_mp4_files(ext=args.ext)

    if not found_files:
        print('No valid mp4 file found')
        exit()
    cmd = ["my", "mp4", *found_files, "-m", "--crf", str(args.crf)]
    cmd += ['--threshold', str(args.threshold)]
    if args.verbose:
        cmd += ["-v"]
    if args.remove:
        cmd += ["-r"]
    print(cmd)
    subprocess.run(cmd, check=True)
