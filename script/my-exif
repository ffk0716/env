#!/usr/bin/env python3

import PIL.Image
from PIL.ExifTags import TAGS


def get_exif(fn):
    ret = {}
    i = PIL.Image.open(fn)
    info = i._getexif()
    for tag, value in info.items():
        if tag in TAGS:
            ret[TAGS[tag]] = value
    return ret


import os
import argparse
import glob
import time
import re
from datetime import datetime

# Get input file name
parser = argparse.ArgumentParser("my exif")
parser.add_argument('input', nargs='+', help='input photo')
parser.add_argument('-a', '--append', action="store_true", help='append original name')
parser.add_argument('-n', '--dry', action="store_true", help='dry run')
parser.add_argument('-v', '--verbose', action="store_true", help='verbose')
parser.add_argument('-m', action="store_true", help='use modification time instead exif DateTimeOriginal')
args = parser.parse_args()

for old_name in args.input:
    if args.m:
        a = os.path.getmtime(old_name)
        date_time = datetime.fromtimestamp(a)
        time = date_time.strftime("%Y-%m-%d %H.%M.%S")
    else:
        time = get_exif(old_name)["DateTimeOriginal"]
        time = re.sub(r'(\d*):(\d*):(\d*) (\d*):(\d*):(\d*)', r'\1-\2-\3 \4.\5.\6', time)
    filename, ext = os.path.splitext(old_name)
    ext = ext.lower()
    #assert (ext == ".JPG" or ext == ".jpg")
    if args.append:
        new_name = "{} {}{}".format(time, filename, ext)
    else:
        new_name = "{}{}".format(time, ext)
    if old_name == new_name:
        continue
    print('{} -> {}'.format(old_name, new_name))
    if not args.dry:
        os.rename(old_name, new_name)
