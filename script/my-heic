#!/usr/bin/env python3

import argparse
import os
import humanize

# Get input file name
parser = argparse.ArgumentParser()
parser.add_argument('input', nargs='+', help='input video')
parser.add_argument('-r', '--remove', action="store_true", help='remove input video')
parser.add_argument('-n', '--dry', action="store_true", help='dry run')
parser.add_argument('-v', '--verbose', action="store_true", help='verbose')
args = parser.parse_args()


def print_size(fa, fb):
    sa = os.path.getsize(fa)
    sb = os.path.getsize(fb)
    fan, fae = os.path.splitext(fa)
    _, fbe = os.path.splitext(fb)
    s = "{:.1f}%(1/{:.1f}): {} -> {}: {}{{{} -> .heic}}".format(sb / sa * 100, sa / sb, humanize.naturalsize(sa),
                                                                humanize.naturalsize(sb), fan, fae, fbe)
    print(s)
    return s


if len(args.input) == 1:
    _, ext = os.path.splitext(args.input[0])
    if ext == ".txt":
        with open(args.input[0], 'r') as f:
            args.input = f.read().splitlines()

import tempfile
import shutil
import progressbar as pb
from wand.image import Image
widgets = [
    pb.Counter(format='%(value)02d/%(max_value)d'), ' ',
    pb.Percentage(), ' ',
    pb.Bar(), ' ',
    pb.ETA(), ' ',
    pb.AbsoluteETA()
]
pbar = pb.ProgressBar(widgets=widgets, redirect_stdout=True)
# Transfer
for old_name in pbar(args.input):
    file_name, _ = os.path.splitext(old_name)
    new_name = file_name + ".heic"
    tmp_name = tempfile.mktemp(suffix=".heic")
    assert (old_name != new_name)
    if not args.dry:
        Image(filename=old_name).convert('heic').save(filename=tmp_name)
        shutil.copyfile(tmp_name, new_name)
        os.remove(tmp_name)
        print_size(old_name, new_name)
        if args.remove:
            os.remove(old_name)
    else:
        print("{} -> {}".format(old_name, new_name))
